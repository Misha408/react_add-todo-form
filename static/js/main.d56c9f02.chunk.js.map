{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUsersById","userId","usersFromServer","find","initialTodo","App","useState","setTitle","setUserId","hesError","setHesError","setTodos","action","method","onSubmit","event","preventDefault","newTodo","Math","max","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d56c9f02.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        { todo.title }\n      </h2>\n\n      <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n        Leanne Graham\n      </a>\n\n      {todo.user && (<UserInfo user={todo.user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUsersById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getUsersById } from './services/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst initialTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUsersById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [hesError, setHesError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(initialTodo);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title && userId) {\n      const newTodo = {\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: +userId,\n        user: getUsersById(+userId),\n      };\n\n      setTitle('');\n      setUserId('');\n      setHesError(false);\n      setTodos([...todos, newTodo]);\n    } else {\n      setHesError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n\n          {(!title && hesError) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => setUserId(event.target.value)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(!userId && hesError) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}